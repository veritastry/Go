#!/bin/bash

export GOPROXY="https://goproxy.io"
export GOPATH="$HOME/go"

ROOT_DIR=${ROOT_DIR:-$(git rev-parse --show-toplevel)}
SERVER=${PWD##*/}

ARGS=("$@")

RED='\033[0;31m'
NC='\033[0m' # No Color
GREEN='\033[0;32m'

function red() {
    echo -e "${RED}$1${NC}"
}

function green() {
    echo -e "${GREEN}$1${NC}"
}

function check_process() {
    if (($?)); then
        red "Start $1 ERROR"
        if [[ $2 ]]; then
            $($2)
        fi
        exit 1
    else
        green "Start $1 SUCCESS"
    fi
}

update_api_doc() {
    $GOPATH/bin/swag init -d $ROOT_DIR
    green "Update Api Document SUCCESS"
}

install_go_dependency() {
    go get -u -v github.com/swaggo/swag/cmd/swag
    go get -u -v github.com/pilu/fresh
}

start_server() {
    install_go_dependency
    update_api_doc
    nohup $GOPATH/bin/fresh -c $ROOT_DIR/config/runner.conf >>$ROOT_DIR/tmp/$SERVER.out 2>&1 &
    check_process $SERVER
}

stop_server() {
    stop_process $SERVER
    red "Stop Server SUCCESS"
}

stop_process() {
    red "Stop Process of "$1
    _PID=$(ps -ef | grep "$1" | grep -v grep | awk '{print $2}')
    echo "$_PID" | while read pid; do
        if [ "$pid" != "" ]; then
            echo "kill process $pid"
            kill $pid
        else
            echo "No "$1" processes detected."
        fi
    done

    echo "Done."
}

remove_file() {
    if [ -f "$1" ]; then
        echo "$1 exist"
        rm -rf $1
    fi
}

build_server() {
    green "Start to build Server"
    source_file="$ROOT_DIR/build/$SERVER"
    remove_file $source_file
    go build -x -o $source_file
    green "Build Server SUCESS"
}

print_help() {
    echo "#*-----------------------------------------------------------------------------"
    echo "# Usage: dev [start/stop/build] <target>"
    echo "#"
    echo "# Mandatory arguments:"
    green "#   start:              start component"
    green "#   stop:               kill component"
    green "#   logs:               show component logs fresh runtime"
    echo "#   build:              build a native file to repo/build/"
    echo "#"
    echo "# All avaiable targets are list as follow:"
    echo "#   all         All services at once"
    green "#   server      Run or kill Server Backup, Dev Server auto refresh when file changed"
    echo "#"
    echo "# use 'dev help' to list all available comamnds"
    echo "#*-----------------------------------------------------------------------------"
}

case ${ARGS[0]} in
start)
    case ${ARGS[1]} in
    server) start_server ;;
    *) print_help ;;
    esac
    ;;
stop)
    case ${ARGS[1]} in
    server) stop_server ;;
    *) print_help ;;
    esac
    ;;
build)
    build_server
    ;;
logs)
    case ${ARGS[1]} in
    server) tail -f $ROOT_DIR/tmp/$SERVER.out ;;
    *) pring_help ;;
    esac
    ;;
*)
    print_help
    ;;
esac
